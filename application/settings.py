"""
Django settings for application project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY') or 'pleaseChangeThisKey!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = (os.getenv('DEBUG') or 'true').lower() == 'true'

ALLOWED_HOSTS = [i.strip() for i in (os.getenv('ALLOWED_HOST') or 'localhost').split(',')]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',

    'models.www_guest_subscribe.apps.WWWGuestSubscribeConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'application.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASE_USED = os.getenv('DATABASE_USED')
DATABASES = {
    'default': {
        'sqlite': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        },
        'postgresql': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.getenv('PG_DATABASE_NAME'),
            'USER': os.getenv('PG_DATABASE_USER'),
            'PASSWORD': os.getenv('PG_DATABASE_PASSWORD'),
            'HOST': os.getenv('PG_DATABASE_HOST'),
            'PORT': os.getenv('PG_DATABASE_PORT') or '5432',
        }
    }.get(DATABASE_USED or 'sqlite')
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Cors Options
# https://pypi.org/project/django-cors-headers/
CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOWED_ORIGINS = [i.strip() for i in (os.getenv('CORS_ALLOWED_ORIGINS') or 'http://127.0.0.1').split(',')]
CORS_ALLOW_METHODS = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS']
CORS_ALLOW_HEADERS = [
    'Accept',
    'Accept-Encoding',
    'Authorization',
    'Content-Type',
    'X-Submit-Token'
]

# Email Options
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('SMTP_HOST')
EMAIL_PORT = int(os.getenv('SMTP_PORT') or '587')
EMAIL_USE_TLS = (os.getenv('SMTP_TLS') or 'false').lower() == 'true'
EMAIL_USE_SSL = (os.getenv('SMTP_SSL') or 'false').lower() == 'true'
EMAIL_HOST_USER = os.getenv('SMTP_USER')
EMAIL_HOST_PASSWORD = os.getenv('SMTP_PASSWORD')
EMAIL_AUTH_METHOD = 'LOGIN'
EMAIL_CONTACT_RECIPIENTS = [i.strip() for i in (os.getenv('EMAIL_CONTACT_RECIPIENTS') or '').split(',')]

# hcaptcha Options
HCAPTCHA_SECRET = os.getenv('HCAPTCHA_SECRET')
HCAPTCHA_ALLOWED_HOSTS = [i.strip() for i in (os.getenv('HCAPTCHA_ALLOWED_HOSTS') or '').split(',')]