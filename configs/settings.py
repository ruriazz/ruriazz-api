"""
Django settings for configs project.

Generated by 'django-admin startproject' using Django 4.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os, pathlib

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = pathlib.Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'secret')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'true') == 'true'

ALLOWED_HOSTS = [i.strip() for i in os.environ.get('DJANGO_ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'corsheaders',
    'drf_yasg'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'libs.middlewares.openapi.OpenapiMiddleware'
]

ROOT_URLCONF = 'configs.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'views')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'configs.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DB_USED = os.environ.get('DJANGO_DB_USED', 'sqlite')
DATABASES = {
    'sqlite': {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    },
    'mongodb': {
        'default': {
            'ENGINE': 'djongo',
            'NAME': os.environ.get('MONGODB_NAME'),
            'ENFORCE_SCHEMA': False,
            'CLIENT': {
                'host': os.environ.get('MONGODB_DNS')
            }
        }
    }
}.get(DB_USED)


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = os.environ.get('DJANGO_TIME_ZONE', 'UTC')

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '_static/'
STATIC_ROOT = os.path.join(BASE_DIR, '/usr/share/nginx/html/_static')
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static')
# ]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# SMTP Configurations
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.environ.get('DJANGO_EMAIL_HOST')
EMAIL_PORT = os.environ.get('DJANGO_EMAIL_PORT')
EMAIL_HOST_USER = os.environ.get('DJANGO_EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('DJANGO_EMAIL_HOST_PASSWORD')
EMAIL_USE_TLS = os.environ.get('DJANGO_EMAIL_USE_TLS') == 'true'
EMAIL_NOTIFICATION_RECEIPIENT = os.environ.get('EMAIL_NOTIFICATION_RECEIPIENT')

if os.environ.get('REDIS_LOCATION'):
    CACHES = {
        "default": {
            "BACKEND": "django_redis.cache.RedisCache",
            "LOCATION": os.environ.get('REDIS_LOCATION'),
            "OPTIONS": {
                "CLIENT_CLASS": "django_redis.client.DefaultClient"
            },
            "KEY_PREFIX": "__cache"
        }
    }

CAPTCHA_SECRET = os.environ.get('CAPTCHA_SECRET')

CORS_ALLOW_ALL_ORIGINS = DEBUG
CORS_ALLOWED_ORIGINS = [
    i.strip() \
        for i in os.environ.get('DJANGO_CORS_ALLOWED_ORIGINS', 'http://localhost:3000') \
        .split(',')
]
CORS_ALLOW_METHODS = [
    i.strip() \
        for i in os.environ.get('DJANGO_CORS_ALLOW_METHODS', 'OPTIONS,GET,POST,PUT,PATCH,DELETE') \
        .split(',')
]
CORS_ALLOW_HEADERS = [
    i.strip() \
        for i in os.environ.get('DJANGO_CORS_ALLOW_HEADERS', 'accept,accept-encoding,content-type,origin,referer,user-agent,x-authorization') \
        .split(',')
]


SWAGGER_SETTINGS = {
   'SECURITY_DEFINITIONS': None,
   'DEFAULT_INFO': 'configs.openapi.info',
   'DEFAULT_AUTO_SCHEMA_CLASS': 'configs.openapi.CamelCaseOperationIDAutoSchema',
}

REDOC_SETTINGS = {
    'LAZY_RENDERING': True,
    'EXPAND_RESPONSES': 'all',
    'PATH_IN_MIDDLE': True,
    'NATIVE_SCROLLBARS': True,
    'REQUIRED_PROPS_FIRST': True
}